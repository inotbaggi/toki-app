name: Build and Upload App
env:
    SERVICE_API_URL: ${{ secrets.PROD_URL }}
    VERSION: ${{ github.sha }}
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build APK
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          cache: 'gradle'
          java-version: '17'
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: version reader
        id: versionReader
        uses: Devofure/version-reader-action@v1.0.1
        with:
          gradlePath: 'composeApp/build.gradle.kts'
      - name: Get the output
        run: |
          echo "The versionName was ${{ steps.versionReader.outputs.versionName }}"
      - name: Create google-services.json
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA | base64 --decode > /home/runner/work/toki-app/toki-app/composeApp/google-services.json
      - name: Build gradle project
        run: ./gradlew build
      - name: Build Android App
        run: ./gradlew assembleRelease
      - name: Find APK
        run: echo "APK_PATH=$(find . -name '*.apk' | head -n 1)" >> $GITHUB_ENV
      - name: Upload APK
        run: |
          echo "Uploading APK from $APK_PATH with version ${{ steps.versionReader.outputs.versionName }}"
          curl -X POST "$API_URL" \
            -F "version=${{ steps.versionReader.outputs.versionName }}" \
            -F "file=@${APK_PATH}" \
            -H "Token: ${{ secrets.API_TOKEN }}"
